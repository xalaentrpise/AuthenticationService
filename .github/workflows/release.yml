name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install package dependencies
        run: npm ci
        working-directory: ./packages/authentication
        
      - name: Validate version format
        run: |
          if [[ ! "${{ github.event.inputs.version || github.ref_name }}" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format"
            exit 1
          fi
          
      - name: Check if version exists
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION="${VERSION#v}"
          if npm view @xala-technologies/authentication@$VERSION version 2>/dev/null; then
            echo "Version $VERSION already exists"
            exit 1
          fi
          
      - name: Run full test suite
        run: |
          npm run test:all
        working-directory: ./packages/authentication
        
      - name: Build package
        run: npm run build
        working-directory: ./packages/authentication
        
      - name: Validate package contents
        run: |
          npm pack --dry-run
          ls -la dist/
        working-directory: ./packages/authentication

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: validate-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install package dependencies
        run: npm ci
        working-directory: ./packages/authentication
        
      - name: Update version in package.json
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION="${VERSION#v}"
          npm version $VERSION --no-git-tag-version
        working-directory: ./packages/authentication
        
      - name: Generate changelog
        run: |
          npx conventional-changelog-cli -p angular -i CHANGELOG.md -s
        working-directory: ./packages/authentication
        
      - name: Build package
        run: npm run build
        working-directory: ./packages/authentication
        
      - name: Create release archive
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION="${VERSION#v}"
          tar -czf "xala-authentication-v$VERSION.tar.gz" -C ./packages/authentication dist/ package.json README.md LICENSE
          
      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          release_name: Release ${{ github.event.inputs.version || github.ref_name }}
          body: |
            ## Changes
            
            See [CHANGELOG.md](https://github.com/xala-technologies/authentication/blob/main/packages/authentication/CHANGELOG.md) for details.
            
            ## Installation
            
            ```bash
            npm install @xala-technologies/authentication@${{ github.event.inputs.version || github.ref_name }}
            ```
            
            ## Features
            
            - Norwegian compliance providers (ID-porten, BankID, Feide, Vipps)
            - Global OAuth providers (Google, Facebook, Supabase)
            - Passwordless authentication (Magic Links, SMS OTP)
            - Enterprise security features
            - GDPR and NSM compliance
            
          draft: false
          prerelease: false
          
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./xala-authentication-v${{ github.event.inputs.version || github.ref_name }}.tar.gz
          asset_name: xala-authentication-v${{ github.event.inputs.version || github.ref_name }}.tar.gz
          asset_content_type: application/gzip

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install package dependencies
        run: npm ci
        working-directory: ./packages/authentication
        
      - name: Update version in package.json
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION="${VERSION#v}"
          npm version $VERSION --no-git-tag-version
        working-directory: ./packages/authentication
        
      - name: Build package
        run: npm run build
        working-directory: ./packages/authentication
        
      - name: Publish to NPM
        run: npm publish --access public
        working-directory: ./packages/authentication
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Verify publication
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION="${VERSION#v}"
          sleep 30
          npm view @xala-technologies/authentication@$VERSION

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, publish-npm]
    if: always()
    
    steps:
      - name: Notify success
        if: needs.publish-npm.result == 'success'
        run: |
          echo "Release successful!"
          # Add Slack/Teams notification here
          
      - name: Notify failure
        if: needs.publish-npm.result == 'failure'
        run: |
          echo "Release failed!"
          # Add Slack/Teams notification here